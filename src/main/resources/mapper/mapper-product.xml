<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hphfarm.www.mapper.ProductMapper">

	<!-- 01 --><!-- 메인화면에 보이는 판매하는 상품 부분 --><!-- 수정 -->
	<select id="selectMainProducts" resultType="com.hphfarm.www.dto.ProductDto">
	
		select * from (select  * from product order by p_price)  where 5 >= rownum and rownum >= 1
	
	</select>

	<!-- 농기구 수 -->
	<select id="productCategory1" resultType="int">
		select count(*) from product where pc_no = 1
	</select>
	
	<!-- 총 씨앗 수 -->
	<select id="productCategory2" resultType="int">
		select count(*) from product where pc_no = 2
	</select>
	
	<!-- 총 모종 수 -->
	<select id="productCategory3" resultType="int">
		select count(*) from product where pc_no = 3
	</select>
	
	<!-- 기타 수 -->
	<select id="productCategory4" resultType="int">
		select count(*) from product where pc_no = 4
	</select>

	<!-- 검색 결과 총 상품 리스트 -->
	<select id="productList" resultType="com.hphfarm.www.dto.ProductDto">
		<if test="category.equals('all')">
			<if test='searchword == null'>
				<if test="pc_no==0">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
			</if>
			<if test="searchword != null">
				<if test="pc_no==0">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product 
						where p_info like '%'||#{searchword}||'%' or p_name like '%'||#{searchword}||'%' order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
				<if test="pc_no==1">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product 
						where pc_no = #{pc_no} and (p_info like '%'||#{searchword}||'%' or p_name like '%'||#{searchword}||'%') order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
				<if test="pc_no==2">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product 
						where pc_no = #{pc_no} and (p_info like '%'||#{searchword}||'%' or p_name like '%'||#{searchword}||'%') order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
				<if test="pc_no==3">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product 
						where pc_no = #{pc_no} and (p_info like '%'||#{searchword}||'%' or p_name like '%'||#{searchword}||'%') order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
				<if test="pc_no==4">
					<![CDATA[
						select * from(select rownum as rnum, a.* from (select * from product 
						where pc_no = #{pc_no} and (p_info like '%'||#{searchword}||'%' or p_name like '%'||#{searchword}||'%') order by p_no desc) a) where rnum >=#{startrow} and rnum <=#{endrow}
					]]>
				</if>
			</if>
		</if>
	</select><!-- 검색 결과 총 상품 리스트 -->

	<!-- 검색 결과 총 상품 수 -->
	<select id="selectListCount" resultType="int">
		<if test="category.equals('all')">
			<if test='searchword == null'>
				<if test="pc_no==0">
					select count(*) from product
				</if>
			</if>
			<if test="searchword != null">
				<if test="pc_no==0">
					select count(*) from product where p_info like
					'%'||#{searchword}||'%' or
					p_name like '%'||#{searchword}||'%'
				</if>
				<if test="pc_no==1">
					select count(*) from product where pc_no = #{pc_no} and
					(p_info like
					'%'||#{searchword}||'%' or p_name like
					'%'||#{searchword}||'%')
				</if>
				<if test="pc_no==2">
					select count(*) from product where pc_no = #{pc_no} and
					(p_info like
					'%'||#{searchword}||'%' or p_name like
					'%'||#{searchword}||'%')
				</if>
				<if test="pc_no==3">
					select count(*) from product where pc_no = #{pc_no} and
					(p_info like
					'%'||#{searchword}||'%' or p_name like
					'%'||#{searchword}||'%')
				</if>
				<if test="pc_no==4">
					select count(*) from product where pc_no = #{pc_no} and
					(p_info like
					'%'||#{searchword}||'%' or p_name like
					'%'||#{searchword}||'%')
				</if>
			</if>
		</if>
	</select><!-- 검색 결과 총 상품 수 -->

	<!-- 그 상품의 모든 댓글들 -->
	<select id="selectPRAll" resultType="com.hphfarm.www.dto.ProductReviewDto">
		select * from productreview where p_no = #{p_no} order by pr_no desc
	</select>

	<!-- 전체 댓글수 -->
	<select id="selectPRlistCount" resultType="int">
		select count(*) from productreview where p_no = #{p_no}
	</select>
	
	<!-- 전체 댓글 평점 -->
	<select id="selectPRstarAvg" resultType="int">
		select round(avg(pr_grade),1) from productreview where p_no = #{p_no}
	</select>

	<!-- 댓글추가 -->
	<insert id="ProductReviewWrite">
		<selectKey resultType="int" keyProperty="pr_no" order="BEFORE">
			select pr_seq.nextval from dual
		</selectKey>
		insert into productreview values(
		#{pr_no},#{pr_grade},#{pr_nickname},sysdate,#{pr_content},#{p_no})
	</insert>

	<!-- 댓글1개 가져오기 -->
	<select id="selectProductReviewOne" resultType="com.hphfarm.www.dto.ProductReviewDto">
		select * from productreview where pr_no=#{pr_no}
	</select>

	<!-- 해당 사용자의 모든 거래 물품 번호 -->
	<select id="selectPno1" resultType="int">
		select p_no from purchaselist 
		where pl_status = 3 and py_no in (select py_no
		from pay where u_no = #{sessionuno})
	</select>
	
		<!-- 30 -->
	<!-- //새로운 거래번호  -->
	<select id="selectPy_no" resultType="int">
	
		select py_no_seq.nextval from dual
	
	</select>
	
		<!-- 30 -->
	<!-- 로그인 uno 통한 정보 얻기. -->
	<select id="selectUserOne" resultType="com.hphfarm.www.dto.MemberDto"> 
		select * from users where u_no = #{u_no}
	
	</select>
	
		<!-- 30 --><!-- //결제내역에 인서트 -->
	<insert id="insertPay">
	
		insert into pay values(#{py_no},#{py_price},sysdate,'kakaopay',#{u_no},'true')
	
	</insert>
	
	<!-- 30 --><!--농장예약한 유저가 어디 농장 예약했는지 받아오는 메소드 -->
	<select id="selectFarmRegDto" resultType="com.hphfarm.www.dto.FarmDto">
	
		select * from farmreg where fr_no = (select fr_no from farmres where u_no = #{u_no})
	
	</select>
	
		<!-- 30 //구매 성공시, 구매내역으로 인서트 -->
	<insert id="insertPurchaseList">
	
		insert into purchaselist values(pl_seq.nextval,#{p_no},#{pl_num},#{pl_delivery},1,#{py_no})
	
	</insert>
	<!-- 01 --><!-- 구매 성공시 상품 목록에서 상품 수량 빼기 -->
	<delete id="minusProduct">
		
		update product set p_num = p_num-#{pl_num} where p_no = #{p_no}
	
	</delete>

</mapper>	
	